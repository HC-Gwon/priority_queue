# 두 개의 배열을 만든다
# 하나의 배열에는 각 문제마다 해당 문제를 풀어야 풀 수 있는 문제들을 대입
# 다른 배열에는 해당 문제를 풀기 위해 풀어야 되는 문제의 수를 대입
import sys
import heapq


N, M = map(int, sys.stdin.readline().rstrip().split())
solveFirst = [[] for i in range(N+1)]       # 각 문제들의 뒤에 풀어야 될 문제를 저장
priority = [0 for i in range(N+1)]          # 먼저 풀어야되는 문제의 수를 저장

for i in range(M):
    x, y = map(int, sys.stdin.readline().rstrip().split())
    solveFirst[x].append(y)
    priority[y] += 1

heap = []
for i in range(1, N+1):
    # 먼저 풀어야 될 문제가 없는 문제들을 힙에 삽입
    if priority[i] == 0:
        heapq.heappush(heap, i)

for i in range(N):
    problem = heap[0]
    print(problem, end= " ")
    heapq.heappop(heap)

    # 먼저 풀어야 할 문제가 풀렸으므로 풀 수 있는 문제들을 힙에 삽입
    for j in solveFirst[problem]:
        priority[j] -= 1
        # 한 문제를 풀기 위해 미리 풀어야 할 문제가 2개 이상일 수 있음
        if priority[j] == 0:
            heapq.heappush(heap, j)
